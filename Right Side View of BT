/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int data;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int val) { data = val; left = null; right = null; }
 * }
 **/

class Solution {
    public List<Integer> rightSideView(TreeNode root) {
        List<Integer> result = new ArrayList<>();
        dfs(root, 0, result);
        return result;
    }
    
    private void dfs(TreeNode node, int level, List<Integer> result) {
        if (node == null) return;

        // Add the first node of each level (from the right)
        if (level == result.size()) {
            result.add(node.data);
        }

        // Traverse right subtree first, then left subtree
        dfs(node.right, level + 1, result);
        dfs(node.left, level + 1, result);
    }
}
